{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\QuickSell-Frontend-Assignment\\\\src\\\\Page\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\nimport Navbar from \"../Components/Navbar\";\nimport CustomSpinner from \"../Components/CustomSpinner\";\n\n// Import User Images\nimport defaultProfile from \"../Assets/profile.png\";\nimport profileImage1 from \"../Assets/profile1.png\";\nimport profileImage4 from \"../Assets/profile4.jpeg\";\nimport profileImage5 from \"../Assets/profile5.jpeg\";\nimport profileImage6 from \"../Assets/profile6.png\";\nimport profileImage7 from \"../Assets/profile7.png\";\nimport { FETCH_URL } from \"../Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // State Declarations\n  const [ticketsData, setTicketsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [groupedByStatus, setGroupedByStatus] = useState({});\n  const [groupedByUserId, setGroupedByUserId] = useState({});\n  const [priorityGrouping, setPriorityGrouping] = useState({});\n  const [groupingCriteria, setGroupingCriteria] = useState('status');\n  const [orderingCriteria, setOrderingCriteria] = useState('priority');\n  const [usersAvailability, setUsersAvailability] = useState({});\n  const [statusMapping, setStatusMapping] = useState({});\n  const statusCategories = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"];\n\n  // Fetch Data when component mounts or grouping criteria changes\n  useEffect(() => {\n    fetchData();\n  }, [groupingCriteria, orderingCriteria]);\n  const sortTicketsByTitle = tickets => {\n    return tickets.sort((a, b) => a.title.localeCompare(b.title));\n  };\n\n  // Grouping Tickets by Status\n  const organizeByStatus = tickets => {\n    let sortedTickets = tickets;\n    if (orderingCriteria === \"title\") {\n      sortedTickets = sortTicketsByTitle(tickets);\n    }\n    const organized = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.status]) {\n        acc[ticket.status] = [];\n      }\n      acc[ticket.status].push(ticket);\n      return acc;\n    }, {});\n    statusCategories.forEach(category => {\n      if (!organized[category]) {\n        organized[category] = [];\n      }\n    });\n    if (orderingCriteria === \"priority\") {\n      for (let category in organized) {\n        organized[category].sort((a, b) => b.priority - a.priority);\n      }\n    }\n    return {\n      Keys: statusCategories,\n      ...organized\n    };\n  };\n\n  // Grouping Tickets by Priority\n  const organizeByPriority = tickets => {\n    let sortedTickets = tickets;\n    if (orderingCriteria === \"title\") {\n      sortedTickets = sortTicketsByTitle(tickets);\n    }\n    const priorityGrouped = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.priority]) {\n        acc[ticket.priority] = [];\n      }\n      acc[ticket.priority].push(ticket);\n      return acc;\n    }, {});\n    return {\n      Keys: Object.keys(priorityGrouped),\n      ...priorityGrouped\n    };\n  };\n\n  // Grouping Tickets by Users\n  const organizeByUser = tickets => {\n    let sortedTickets = tickets;\n    if (orderingCriteria === \"title\") {\n      sortedTickets = sortTicketsByTitle(tickets);\n    }\n    const userGrouped = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.userId]) {\n        acc[ticket.userId] = [];\n      }\n      acc[ticket.userId].push(ticket);\n      return acc;\n    }, {});\n    if (orderingCriteria === \"priority\") {\n      for (let key in userGrouped) {\n        userGrouped[key].sort((a, b) => b.priority - a.priority);\n      }\n    }\n    return {\n      Keys: ticketsData.map(user => user.id.toString()),\n      ...userGrouped\n    };\n  };\n\n  // Mapping User Availability\n  const mapUserAvailability = users => {\n    return users.reduce((acc, user) => {\n      acc[user.id] = user.available;\n      return acc;\n    }, {});\n  };\n\n  // Extracting Status Mapping\n  const generateStatusMapping = data => {\n    const mapping = {};\n    data.tickets.forEach(ticket => {\n      mapping[ticket.id] = ticket.status;\n    });\n    return mapping;\n  };\n\n  // Fetching Data from API\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(FETCH_URL);\n      const data = await response.json();\n      setLoading(false);\n      setTicketsData(data.users);\n      setGroupedByUserId(organizeByUser(data.tickets));\n      setGroupedByStatus(organizeByStatus(data.tickets));\n      setPriorityGrouping(organizeByPriority(data.tickets));\n      setUsersAvailability(mapUserAvailability(data.users));\n      setStatusMapping(generateStatusMapping(data));\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n  if (groupingCriteria === \"status\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: groupingCriteria,\n          setGrouping: setGroupingCriteria,\n          ordering: orderingCriteria,\n          setOrdering: setOrderingCriteria,\n          call: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: groupedByStatus.Keys.map((category, index) => {\n              var _groupedByStatus$cate;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text\",\n                    children: [category === \"Todo\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-circle\",\n                      id: \"todo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 27\n                    }, this) : category === \"In progress\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-adjust\",\n                      id: \"progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 27\n                    }, this) : category === \"Backlog\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-task-x\",\n                      id: \"backlog\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this) : category === \"Done\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bxs-check-circle\",\n                      id: \"done\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bxs-x-circle\",\n                      id: \"cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: category === \"In progress\" ? \"In Progress\" : category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: (_groupedByStatus$cate = groupedByStatus[category]) === null || _groupedByStatus$cate === void 0 ? void 0 : _groupedByStatus$cate.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), groupedByStatus[category] && groupedByStatus[category].map(ticket => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: ticket.id,\n                    title: ticket.title,\n                    tag: ticket.tag,\n                    userId: ticket.userId,\n                    groupedStatus: groupedByStatus,\n                    usersData: ticketsData,\n                    priority: ticket.priority,\n                    grouping: groupingCriteria,\n                    ordering: orderingCriteria,\n                    statusMapping: statusMapping\n                  }, ticket.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (groupingCriteria === \"users\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: groupingCriteria,\n          setGrouping: setGroupingCriteria,\n          ordering: orderingCriteria,\n          setOrdering: setOrderingCriteria,\n          call: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: usersAvailability && groupedByUserId.Keys.map((userId, index) => {\n              var _ticketsData$find, _groupedByUserId$user;\n              const userName = ((_ticketsData$find = ticketsData.find(user => user.id.toString() === userId)) === null || _ticketsData$find === void 0 ? void 0 : _ticketsData$find.name) || \"Unknown\";\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: String(usersAvailability[userId]) === \"false\" ? \"user-avatar-unavailable\" : \"user-avatar\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: userId === \"usr-1\" ? profileImage1 : userId === \"usr-2\" ? profileImage6 : userId === \"usr-3\" ? profileImage7 : userId === \"usr-4\" ? profileImage5 : userId === \"usr-5\" ? profileImage4 : defaultProfile,\n                        className: String(usersAvailability[userId]) === \"false\" ? \"user-avatar-unavailable\" : \"user-avatar\",\n                        alt: \"user\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: userName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: (_groupedByUserId$user = groupedByUserId[userId]) === null || _groupedByUserId$user === void 0 ? void 0 : _groupedByUserId$user.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this), groupedByUserId[userId] && groupedByUserId[userId].map(ticket => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: ticket.id,\n                    title: ticket.title,\n                    tag: ticket.tag,\n                    userId: ticket.userId,\n                    groupedStatus: groupedByStatus,\n                    usersData: ticketsData,\n                    priority: ticket.priority,\n                    grouping: groupingCriteria,\n                    ordering: orderingCriteria,\n                    statusMapping: statusMapping\n                  }, ticket.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (groupingCriteria === \"priority\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: groupingCriteria,\n          setGrouping: setGroupingCriteria,\n          ordering: orderingCriteria,\n          setOrdering: setOrderingCriteria,\n          call: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: priorityGrouping.Keys.map((priorityLevel, index) => {\n              var _priorityGrouping$pri;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: [\"Priority \", priorityLevel]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: (_priorityGrouping$pri = priorityGrouping[priorityLevel]) === null || _priorityGrouping$pri === void 0 ? void 0 : _priorityGrouping$pri.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 23\n                }, this), priorityGrouping[priorityLevel] && priorityGrouping[priorityLevel].map(ticket => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: ticket.id,\n                    title: ticket.title,\n                    tag: ticket.tag,\n                    userId: ticket.userId,\n                    groupedStatus: groupedByStatus,\n                    usersData: ticketsData,\n                    priority: ticket.priority,\n                    grouping: groupingCriteria,\n                    ordering: orderingCriteria,\n                    statusMapping: statusMapping\n                  }, ticket.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Dashboard, \"i7KQmBPLd9mFtje84Oe58n4rkGw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","CustomSpinner","defaultProfile","profileImage1","profileImage4","profileImage5","profileImage6","profileImage7","FETCH_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","ticketsData","setTicketsData","loading","setLoading","groupedByStatus","setGroupedByStatus","groupedByUserId","setGroupedByUserId","priorityGrouping","setPriorityGrouping","groupingCriteria","setGroupingCriteria","orderingCriteria","setOrderingCriteria","usersAvailability","setUsersAvailability","statusMapping","setStatusMapping","statusCategories","fetchData","sortTicketsByTitle","tickets","sort","a","b","title","localeCompare","organizeByStatus","sortedTickets","organized","reduce","acc","ticket","status","push","forEach","category","priority","Keys","organizeByPriority","priorityGrouped","Object","keys","organizeByUser","userGrouped","userId","key","map","user","id","toString","mapUserAvailability","users","available","generateStatusMapping","data","mapping","response","fetch","json","error","console","children","grouping","setGrouping","ordering","setOrdering","call","fileName","_jsxFileName","lineNumber","columnNumber","className","index","_groupedByStatus$cate","length","tag","groupedStatus","usersData","_ticketsData$find","_groupedByUserId$user","userName","find","name","String","src","alt","priorityLevel","_priorityGrouping$pri","_c","$RefreshReg$"],"sources":["C:/Users/HP/QuickSell-Frontend-Assignment/src/Page/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Components/Card\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport CustomSpinner from \"../Components/CustomSpinner\";\r\n\r\n// Import User Images\r\nimport defaultProfile from \"../Assets/profile.png\";\r\nimport profileImage1 from \"../Assets/profile1.png\";\r\nimport profileImage4 from \"../Assets/profile4.jpeg\";\r\nimport profileImage5 from \"../Assets/profile5.jpeg\";\r\nimport profileImage6 from \"../Assets/profile6.png\";\r\nimport profileImage7 from \"../Assets/profile7.png\";\r\nimport { FETCH_URL } from \"../Config\";\r\n\r\nconst Dashboard = () => {\r\n  // State Declarations\r\n  const [ticketsData, setTicketsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [groupedByStatus, setGroupedByStatus] = useState({});\r\n  const [groupedByUserId, setGroupedByUserId] = useState({});\r\n  const [priorityGrouping, setPriorityGrouping] = useState({});\r\n  const [groupingCriteria, setGroupingCriteria] = useState('status');\r\n  const [orderingCriteria, setOrderingCriteria] = useState('priority');\r\n  const [usersAvailability, setUsersAvailability] = useState({});\r\n  const [statusMapping, setStatusMapping] = useState({});\r\n  const statusCategories = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"];\r\n\r\n  // Fetch Data when component mounts or grouping criteria changes\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [groupingCriteria, orderingCriteria]);\r\n\r\n  const sortTicketsByTitle = (tickets) => {\r\n    return tickets.sort((a, b) => a.title.localeCompare(b.title));\r\n  };\r\n\r\n  // Grouping Tickets by Status\r\n  const organizeByStatus = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (orderingCriteria === \"title\") {\r\n      sortedTickets = sortTicketsByTitle(tickets);\r\n    }\r\n\r\n    const organized = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.status]) {\r\n        acc[ticket.status] = [];\r\n      }\r\n      acc[ticket.status].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    statusCategories.forEach((category) => {\r\n      if (!organized[category]) {\r\n        organized[category] = [];\r\n      }\r\n    });\r\n\r\n    if (orderingCriteria === \"priority\") {\r\n      for (let category in organized) {\r\n        organized[category].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: statusCategories,\r\n      ...organized,\r\n    };\r\n  };\r\n\r\n  // Grouping Tickets by Priority\r\n  const organizeByPriority = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (orderingCriteria === \"title\") {\r\n      sortedTickets = sortTicketsByTitle(tickets);\r\n    }\r\n\r\n    const priorityGrouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.priority]) {\r\n        acc[ticket.priority] = [];\r\n      }\r\n      acc[ticket.priority].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      Keys: Object.keys(priorityGrouped),\r\n      ...priorityGrouped,\r\n    };\r\n  };\r\n\r\n  // Grouping Tickets by Users\r\n  const organizeByUser = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (orderingCriteria === \"title\") {\r\n      sortedTickets = sortTicketsByTitle(tickets);\r\n    }\r\n\r\n    const userGrouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.userId]) {\r\n        acc[ticket.userId] = [];\r\n      }\r\n      acc[ticket.userId].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    if (orderingCriteria === \"priority\") {\r\n      for (let key in userGrouped) {\r\n        userGrouped[key].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: ticketsData.map((user) => user.id.toString()),\r\n      ...userGrouped,\r\n    };\r\n  };\r\n\r\n  // Mapping User Availability\r\n  const mapUserAvailability = (users) => {\r\n    return users.reduce((acc, user) => {\r\n      acc[user.id] = user.available;\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Extracting Status Mapping\r\n  const generateStatusMapping = (data) => {\r\n    const mapping = {};\r\n\r\n    data.tickets.forEach((ticket) => {\r\n      mapping[ticket.id] = ticket.status;\r\n    });\r\n\r\n    return mapping;\r\n  };\r\n\r\n  // Fetching Data from API\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(FETCH_URL);\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      setTicketsData(data.users);\r\n      setGroupedByUserId(organizeByUser(data.tickets));\r\n      setGroupedByStatus(organizeByStatus(data.tickets));\r\n      setPriorityGrouping(organizeByPriority(data.tickets));\r\n      setUsersAvailability(mapUserAvailability(data.users));\r\n      setStatusMapping(generateStatusMapping(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (groupingCriteria === \"status\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={groupingCriteria}\r\n            setGrouping={setGroupingCriteria}\r\n            ordering={orderingCriteria}\r\n            setOrdering={setOrderingCriteria}\r\n            call={fetchData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {loading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {groupedByStatus.Keys.map((category, index) => (\r\n                  <div className=\"column\" key={index}>\r\n                    <div className=\"Header\">\r\n                      <div className=\"icon-text\">\r\n                        {category === \"Todo\" ? (\r\n                          <i className=\"bx bx-circle\" id=\"todo\"></i>\r\n                        ) : category === \"In progress\" ? (\r\n                          <i className=\"bx bx-adjust\" id=\"progress\"></i>\r\n                        ) : category === \"Backlog\" ? (\r\n                          <i className=\"bx bx-task-x\" id=\"backlog\"></i>\r\n                        ) : category === \"Done\" ? (\r\n                          <i className=\"bx bxs-check-circle\" id=\"done\"></i>\r\n                        ) : (\r\n                          <i className=\"bx bxs-x-circle\" id=\"cancel\"></i>\r\n                        )}\r\n                        <span className=\"text\">\r\n                          {category === \"In progress\" ? \"In Progress\" : category}\r\n                        </span>\r\n                        <span>{groupedByStatus[category]?.length}</span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                        <i className=\"bx bx-dots-horizontal-rounded\" id=\"dots\"></i>\r\n                      </div>\r\n                    </div>\r\n                    {groupedByStatus[category] &&\r\n                      groupedByStatus[category].map((ticket) => {\r\n                        return (\r\n                          <Card\r\n                            id={ticket.id}\r\n                            title={ticket.title}\r\n                            tag={ticket.tag}\r\n                            userId={ticket.userId}\r\n                            groupedStatus={groupedByStatus}\r\n                            usersData={ticketsData}\r\n                            priority={ticket.priority}\r\n                            key={ticket.id}\r\n                            grouping={groupingCriteria}\r\n                            ordering={orderingCriteria}\r\n                            statusMapping={statusMapping}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (groupingCriteria === \"users\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={groupingCriteria}\r\n            setGrouping={setGroupingCriteria}\r\n            ordering={orderingCriteria}\r\n            setOrdering={setOrderingCriteria}\r\n            call={fetchData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {loading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {usersAvailability &&\r\n                  groupedByUserId.Keys.map((userId, index) => {\r\n                    const userName =\r\n                      ticketsData.find((user) => user.id.toString() === userId)?.name ||\r\n                      \"Unknown\";\r\n                    return (\r\n                      <div className=\"column\" key={index}>\r\n                        <div className=\"Header\">\r\n                          <div className=\"icon-text\">\r\n                            <div\r\n                              className={\r\n                                String(usersAvailability[userId]) === \"false\"\r\n                                  ? \"user-avatar-unavailable\"\r\n                                  : \"user-avatar\"\r\n                              }\r\n                            >\r\n                              <img\r\n                                src={\r\n                                  userId === \"usr-1\"\r\n                                    ? profileImage1\r\n                                    : userId === \"usr-2\"\r\n                                    ? profileImage6\r\n                                    : userId === \"usr-3\"\r\n                                    ? profileImage7\r\n                                    : userId === \"usr-4\"\r\n                                    ? profileImage5\r\n                                    : userId === \"usr-5\"\r\n                                    ? profileImage4\r\n                                    : defaultProfile\r\n                                }\r\n                                className={\r\n                                  String(usersAvailability[userId]) === \"false\"\r\n                                    ? \"user-avatar-unavailable\"\r\n                                    : \"user-avatar\"\r\n                                }\r\n                                alt=\"user\"\r\n                              />\r\n                            </div>\r\n                            <span className=\"text\">{userName}</span>\r\n                            <span>{groupedByUserId[userId]?.length}</span>\r\n                          </div>\r\n                          <div className=\"actions\">\r\n                            <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                            <i className=\"bx bx-dots-horizontal-rounded\" id=\"dots\"></i>\r\n                          </div>\r\n                        </div>\r\n                        {groupedByUserId[userId] &&\r\n                          groupedByUserId[userId].map((ticket) => {\r\n                            return (\r\n                              <Card\r\n                              id={ticket.id}\r\n                              title={ticket.title}\r\n                              tag={ticket.tag}\r\n                              userId={ticket.userId}\r\n                              groupedStatus={groupedByStatus}\r\n                              usersData={ticketsData}\r\n                              priority={ticket.priority}\r\n                              key={ticket.id}\r\n                              grouping={groupingCriteria}\r\n                              ordering={orderingCriteria}\r\n                              statusMapping={statusMapping}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (groupingCriteria === \"priority\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={groupingCriteria}\r\n            setGrouping={setGroupingCriteria}\r\n            ordering={orderingCriteria}\r\n            setOrdering={setOrderingCriteria}\r\n            call={fetchData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {loading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {priorityGrouping.Keys.map((priorityLevel, index) => {\r\n                  return (\r\n                    <div className=\"column\" key={index}>\r\n                      <div className=\"Header\">\r\n                        <div className=\"icon-text\">\r\n                          <span className=\"text\">Priority {priorityLevel}</span>\r\n                          <span>{priorityGrouping[priorityLevel]?.length}</span>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                          <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                          <i className=\"bx bx-dots-horizontal-rounded\" id=\"dots\"></i>\r\n                        </div>\r\n                      </div>\r\n                      {priorityGrouping[priorityLevel] &&\r\n                        priorityGrouping[priorityLevel].map((ticket) => {\r\n                          return (\r\n                            <Card\r\n                              id={ticket.id}\r\n                              title={ticket.title}\r\n                              tag={ticket.tag}\r\n                              userId={ticket.userId}\r\n                              groupedStatus={groupedByStatus}\r\n                              usersData={ticketsData}\r\n                              priority={ticket.priority}\r\n                              key={ticket.id}\r\n                              grouping={groupingCriteria}\r\n                              ordering={orderingCriteria}\r\n                              statusMapping={statusMapping}\r\n                            />\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}